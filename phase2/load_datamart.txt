/* Create a table called date_dimension.
This table represents the Date dimension in the dimensional model. 
The date_key column is the primary key (it is autogenerated in sequence, hence it is serial); 
the month, quarter and year columns represent the Month, Quarter and Year attributes respectively.
*/
CREATE TABLE date_dimension (
    date_key SERIAL PRIMARY KEY,
    month INTEGER NOT NULL,
    quarter INTEGER NOT NULL,
    year INTEGER NOT NULL
);

/* Create a table called branch_attendance_outrigger_dimension. 
This table represents the Branch Attendance outrigger dimension in the dimensional model. 
The branch_attendance_key column is the primary key (it is autogenerated in sequence, hence it is serial); 
the year and attendance_millions columns represents the Year and Attendance (millions) attributes respectively.
*/ 
CREATE TABLE branch_attendance_outrigger_dimension (
    branch_attendance_key SERIAL PRIMARY KEY,
    attendance_millions_2006 DECIMAL,
    attendance_millions_2007 DECIMAL,
    attendance_millions_2008 DECIMAL,
    attendance_millions_2009 DECIMAL,
    attendance_millions_2010 DECIMAL,
    attendance_millions_2011 DECIMAL,
    attendance_millions_2012 DECIMAL,
    attendance_millions_2013 DECIMAL,
    attendance_millions_2014 DECIMAL,
    attendance_millions_2015 DECIMAL,
    attendance_millions_2016 DECIMAL,
    attendance_millions_2017 DECIMAL,
    attendance_millions_2018 DECIMAL,
    attendance_millions_2019 DECIMAL,
    attendance_millions_2020 DECIMAL,
    attendance_millions_2021 DECIMAL
);

/* Create a table called branch_dimension. 
This table represents the Branch dimension in the dimensional model. 
The branch_key column is the primary key (it is autogenerated in sequence, hence it is serial); 
the branch_name column represents the Branch Name attribute. 
This dimension is linked to the Branch Attendance Outrigger Dimension.
*/
CREATE TABLE branch_dimension (
    branch_key SERIAL PRIMARY KEY,
    branch_name VARCHAR(255) NOT NULL,
    branch_attendance_key INTEGER,
    FOREIGN KEY (branch_attendance_key) REFERENCES branch_attendance_outrigger_dimension    
    (branch_attendance_key)
);

/* Create a table called review_text_dimension. 
This table represents the Review dimension in the dimensional model. 
The review_text_key column is the primary key (it is autogenerated in sequence, hence it is serial); 
the review_text and rating columns represent the Review Text and Rating attributes respectively.
*/
CREATE TABLE review_text_dimension (
    review_text_key SERIAL PRIMARY KEY,
    review_text TEXT NOT NULL,
    rating INTEGER NOT NULL
);

/* Create a table called review_fact.
It represents the fact table from the dimensional model.
Note that the primary key for this table is a composite primary 
key consisting of the date_key, branch_key and review_text_key.
*/
CREATE TABLE review_fact (
    surrogate_key SERIAL,
    date_key INTEGER NOT NULL,
    branch_key INTEGER NOT NULL,
    review_text_key INTEGER NOT NULL,
    monthly_percent_positive_reviews DECIMAL NOT NULL,
    monthly_percent_mixed_reviews DECIMAL NOT NULL,
    monthly_percent_negative_reviews DECIMAL NOT NULL,
    PRIMARY KEY (date_key, branch_key, review_text_key),
    FOREIGN KEY (date_key) REFERENCES date_dimension (date_key),
    FOREIGN KEY (branch_key) REFERENCES branch_dimension (branch_key),
    FOREIGN KEY (review_text_key) REFERENCES review_text_dimension (review_text_key)
);

/* Create a temporary table called csv_data (it only exists for 
the duration of the transaction).
*/
CREATE TEMPORARY TABLE csv_data (
    surrogate_key INTEGER NOT NULL,
    review_text TEXT NOT NULL,
    rating INTEGER NOT NULL,
    month INTEGER NOT NULL,
	quarter INTEGER NOT NULL,
    year INTEGER NOT NULL,
    branch_name VARCHAR(255) NOT NULL,
    monthly_percent_positive_reviews DECIMAL NOT NULL,
    monthly_percent_mixed_reviews DECIMAL NOT NULL,
    monthly_percent_negative_reviews DECIMAL NOT NULL,
    attendance_millions_2006 DECIMAL,
    attendance_millions_2007 DECIMAL,
    attendance_millions_2008 DECIMAL,
    attendance_millions_2009 DECIMAL,
    attendance_millions_2010 DECIMAL,
    attendance_millions_2011 DECIMAL,
    attendance_millions_2012 DECIMAL,
    attendance_millions_2013 DECIMAL,
    attendance_millions_2014 DECIMAL,
    attendance_millions_2015 DECIMAL,
    attendance_millions_2016 DECIMAL,
    attendance_millions_2017 DECIMAL,
    attendance_millions_2018 DECIMAL,
    attendance_millions_2019 DECIMAL,
    attendance_millions_2020 DECIMAL,
    attendance_millions_2021 DECIMAL
);

/* Copy all of the data from staged_data.csv into the csv_data 
(columns in the csv file are separated by the , delimiter).

NOTE: Replace '/Users/nicholasgin/Desktop/staged_data.csv' with the absolute path 
you saved 'staged_data.csv' at.
*/
COPY csv_data (surrogate_key, review_text, rating, month, quarter, year, branch_name, 
               monthly_percent_positive_reviews, monthly_percent_mixed_reviews, 
               monthly_percent_negative_reviews, attendance_millions_2006, 
               attendance_millions_2007, attendance_millions_2008, attendance_millions_2009, 
			   attendance_millions_2010, attendance_millions_2011, attendance_millions_2012,
			   attendance_millions_2013, attendance_millions_2014, attendance_millions_2015, 
			   attendance_millions_2016, attendance_millions_2017, attendance_millions_2018, 
			   attendance_millions_2019, attendance_millions_2020, attendance_millions_2021)
FROM '/Users/nicholasgin/Desktop/staged_data.csv' DELIMITER ',' CSV HEADER;


-- Load the appropriate data from csv_data into the date_dimension
INSERT INTO date_dimension (month, quarter, year)
SELECT DISTINCT month, quarter, year
FROM csv_data;

-- Load the appropriate data from csv_data into the review_text_dimension
INSERT INTO review_text_dimension (review_text, rating)
SELECT DISTINCT review_text, rating
FROM csv_data;

-- Load the appropriate data from csv_data into the branch_attendance_outrigger_dimension
INSERT INTO branch_attendance_outrigger_dimension (attendance_millions_2006, attendance_millions_2007, attendance_millions_2008, attendance_millions_2009, attendance_millions_2010, attendance_millions_2011, attendance_millions_2012, attendance_millions_2013, attendance_millions_2014, attendance_millions_2015, attendance_millions_2016, attendance_millions_2017, attendance_millions_2018, attendance_millions_2019, attendance_millions_2020, attendance_millions_2021)
SELECT DISTINCT attendance_millions_2006, attendance_millions_2007, attendance_millions_2008, attendance_millions_2009, attendance_millions_2010, attendance_millions_2011, attendance_millions_2012, attendance_millions_2013, attendance_millions_2014, attendance_millions_2015, attendance_millions_2016, attendance_millions_2017, attendance_millions_2018, attendance_millions_2019, attendance_millions_2020, attendance_millions_2021
FROM csv_data;

/* Load the appropriate data from csv_data into the branch_dimension
Use the JOIN statement to match the year and attendance_millions columns 
from the branch_attendance_outrigger_dimension and csv_data and then link 
them to their corresponding branch.
*/
INSERT INTO branch_dimension (branch_name, branch_attendance_key)
SELECT DISTINCT csv_data.branch_name, branch_attendance_outrigger_dimension.branch_attendance_key
FROM csv_data
JOIN branch_attendance_outrigger_dimension ON (
    csv_data.attendance_millions_2016 = branch_attendance_outrigger_dimension.attendance_millions_2016 
    AND csv_data.attendance_millions_2017 = branch_attendance_outrigger_dimension.attendance_millions_2017 
    AND csv_data.attendance_millions_2018 = branch_attendance_outrigger_dimension.attendance_millions_2018 
    AND csv_data.attendance_millions_2019 = branch_attendance_outrigger_dimension.attendance_millions_2019 
    AND csv_data.attendance_millions_2020 = branch_attendance_outrigger_dimension.attendance_millions_2020 
    AND csv_data.attendance_millions_2021 = branch_attendance_outrigger_dimension.attendance_millions_2021
)
WHERE csv_data.attendance_millions_2016 = branch_attendance_outrigger_dimension.attendance_millions_2016 
  AND csv_data.attendance_millions_2017 = branch_attendance_outrigger_dimension.attendance_millions_2017 
  AND csv_data.attendance_millions_2018 = branch_attendance_outrigger_dimension.attendance_millions_2018 
  AND csv_data.attendance_millions_2019 = branch_attendance_outrigger_dimension.attendance_millions_2019 
  AND csv_data.attendance_millions_2020 = branch_attendance_outrigger_dimension.attendance_millions_2020 
  AND csv_data.attendance_millions_2021 = branch_attendance_outrigger_dimension.attendance_millions_2021;

/* Load the appropriate data from csv_data into review_fact
Use the JOIN statements to match the month and year columns from the date_dimension, 
the branch_name column from the branch_dimension and the review_text and rating 
columns from the review_text_dimension to their corresponding columns in csv_data;
we can link them to the review_fact.
*/
INSERT INTO review_fact (date_key, branch_key, review_text_key, monthly_percent_positive_reviews, 
						 monthly_percent_mixed_reviews, 
						 monthly_percent_negative_reviews)
SELECT DISTINCT date_dimension.date_key, branch_dimension.branch_key, review_text_dimension.review_text_key, 
csv_data.monthly_percent_positive_reviews, csv_data.monthly_percent_mixed_reviews, 
csv_data.monthly_percent_negative_reviews
FROM csv_data
JOIN date_dimension ON (csv_data.month = date_dimension.month AND csv_data.year = date_dimension.year)
JOIN branch_dimension ON csv_data.branch_name = branch_dimension.branch_name
JOIN review_text_dimension ON csv_data.review_text = review_text_dimension.review_text AND 
csv_data.rating = review_text_dimension.rating;